{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/app.js","src/js/modules/buildTable.js","src/js/modules/processData.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import processData from './modules/processData';\nimport buildTable from './modules/buildTable';\n\n/**\n * Namespace object\n */\nvar jira = {\n    webSocket: new WebSocket(\"ws://10.89.236.210:7700/socketserver\"),\n    data: {\n        projects: {}, //data for currently tracked projects\n        devs: {} //data for tickets by developers\n    },\n    widgets: {\n        tables: {\n            contsinerID: \"current_projects\"\n        }\n    }\n}\n\n/**\n * Establish connection\n */\njira.webSocket.onopen = function(event) {\n    console.log(`Browser >> Connected to http://10.89.236.210/`);\n    jira.webSocket.send('Test');\n};\n\n/**\n * Update info\n */\njira.webSocket.onmessage = function(event) {\n    processData(jira, JSON.parse(event.data));\n    tablesWidgetUpdate();\n}\n\n/**\n * Tables update\n */\nfunction tablesWidgetUpdate() {\n    document.getElementById(jira.widgets.tables.contsinerID).textContent = '';\n    buildTable(jira.data.projects, 'projects');\n    buildTable(jira.data.devs, 'devs');\n}","/**\n * Module to build tables based on data type\n * \n * @export tablesFactory function\n * @param {object} [data={}] data to be used in table \n * @param {string} [type=\"projects\"]  table type => \"projects\" || \"devs\"\n * @returns {void}\n */\nexport default function(data = {}, type = \"projects\") {\n\n    //check if data object is not empty\n    if (noData(data)) return;\n\n    //create table, headers, rows, select container\n    let container = document.getElementById(\"current_projects\"),\n        table = createNode('table'),\n        headers = createHeaders(data, type),\n        rows = createRows(data, type, headers);\n\n    createTable(container, type, table, headers, rows);\n}\n\n/**\n * Create headers for table based on type\n * \n * @param {object} data object containing data on current projects\n * @param {string} type table type => \"projects\" || \"devs\"\n * @returns {object} array with headers' names\n */\nfunction createHeaders(data, type) {\n    let headers = [];\n    if (type === \"projects\") {\n        headers = [\n            'Project',\n            'Jira Key',\n            '(Re)Open',\n            'In Progress',\n            'Dev Complete',\n            'Tridion Pbl',\n            'QA Test',\n            'Blocked',\n            'Closed',\n            'Assignees'\n        ];\n    } else {\n        headers = ['Developer'];\n        for (let dev in data) {\n            for (let project in data[dev]) {\n                if (!headers.includes(project)) headers.push(project);\n            }\n        }\n    }\n    return headers;\n}\n\n/**\n * Check if data is a proper object\n * \n * @param {object} data object to check \n * @returns {boolean} \n */\nfunction noData(data) {\n    if (Object.keys(data).length === 0 && data.constructor === Object) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Elements factory\n * \n * @param {string} nodeType indicate element type\n * @param {string} content set textContent for element\n * @returns {object} html node\n */\nfunction createNode(nodeType, content) {\n    let node = document.createElement(nodeType);\n    (nodeType === \"table\") ? node.className = \"b_table\": node.className = `b_table__${nodeType}`;\n    if (content || content === 0) node.textContent = content;\n    return node;\n}\n\n/**\n * Creaet rows from data\n * \n * @param {object} data object containing data on current projects\n * @param {string} type table type => \"projects\" || \"devs\"\n * @returns {array} with html nodes\n */\nfunction createRows(data, type, headers) {\n    let rows = [];\n    for (let row in data) {\n        let tr = createNode('tr');\n        addClassModifier(tr);\n        rows.push(createCell(tr, data[row], row, type, headers));\n    }\n    return rows;\n}\n\nfunction addClassModifier(node, classModifier = '--selected') {\n    classModifier = node.className + classModifier;\n    if (node) node.addEventListener('click', _=>{\n        node.classList.toggle(classModifier);\n    })\n}\n\n/**\n * Create cell beased on bunch of params...\n * \n * @param {object} tr current tr html node\n * @param {object} data object containing data on current projects\n * @param {string} name name of the current row \n * @param {string} type table type => \"projects\" || \"devs\"\n * @param {array} headers array with data for table headers\n * @returns {object} tr html node\n */\nfunction createCell(tr, data, name, type, headers) {\n    let cells = [];\n\n    if (type === \"projects\") {\n        //destructuring object with project data & assigning default values\n        let {\n            assignees = [null],\n                blocked = 0,\n                closed = 0,\n                devComplete = 0,\n                devTest = 0,\n                inProgress = 0,\n                name = \"Top Secret\",\n                opened = 0,\n                project = \"Classified\",\n                readyForTest = 0,\n                tridion = 0\n        } = data;\n\n        //building an array for cells in a proper order\n        cells = [name, project, opened, inProgress, devComplete, tridion, readyForTest, blocked, closed, assignees];\n\n    } else {\n        for (let project of headers) cells.push(0);\n        cells[0] = name; //set dev name as the first value in cells array\n        for (let project in data) {\n            //assign dev's project value (num of tickets) to proper position in cells arr\n            cells[headers.indexOf(project)] = data[project]; \n        }\n    }\n\n    for (let cell of cells) {\n        let td = createNode('td', cell);\n        tr.appendChild(td);\n    }\n    return tr;\n}\n\n/**\n * Build a table\n * \n * @param {object} container table's container\n * @param {object} table html node object\n * @param {array} headers array with headers' values\n * @param {array} rows array with html nodes to be used as rows\n * @returns {void} \n */\nfunction createTable(container, type, table, headers, rows) {\n\n    let tableTitle = createNode('h2', type);\n\n    //create headers\n    let tr = createNode('tr');\n    for (let cell of headers) {\n        let td = createNode('th', cell);\n        tr.appendChild(td);\n    }\n    table.appendChild(tr);\n\n    // table.appendChild(headers);\n    for (let row of rows) {\n        table.appendChild(row);\n    }\n\n    //append table to its container\n    container.appendChild(tableTitle);\n    container.appendChild(table);\n}","export default function(jira, data) {\n    \n    //check if data contains message\n    if (data.message) {\n        console.log(data.message);\n        return;\n    }\n\n    //update jira.data object\n    for (let item in data) {\n        jira.data[item] = data[item];\n    }\n    console.log(new Date());\n    console.log(jira.data);\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}