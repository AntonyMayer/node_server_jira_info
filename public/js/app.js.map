{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/app.js","src/js/modules/buildTable.js","src/js/modules/processData.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import processData from './modules/processData';\nimport buildTable from './modules/buildTable';\n\n//namespace object\nvar jira = {\n    getUpdates: new WebSocket(\"ws://localhost:3300/socketserver\", \"protocolOne\"),\n    data: {}\n}\n\n/**\n * Establish connection\n */\njira.getUpdates.onopen = function(event) {\n    console.log(`Connected to http://localhost:3300/`);\n    jira.getUpdates.send('Test');\n};\n\n/**\n * Update info\n */\njira.getUpdates.onmessage = function(event) {\n    processData(jira, JSON.parse(event.data));\n    buildTable(jira.data, 'projects');\n    buildTable(jira.data, 'devs');\n}","export default function(data, type) {\n\n    //check if object is not empty\n    if (noData(data)) return;\n\n    //create table and rows, find container\n    let table = createNode('table'),\n        rows = createRows(data),\n        container = document.getElementById(\"current_projects\"),\n        headers = ['Project', 'Key', '(Re)Open', 'In Progress', 'Dev Complete', 'Tridion Pbl', 'QA Test', 'Blocked', 'Closed', 'Assignees'];\n    \n    createTable(container, table, headers, rows);\n}\n\n/**\n * Check if data is a proper object\n * \n * @param {object} data object to check \n * @returns {boolean} \n */\nfunction noData(data) {\n    console.log(data);\n    if (Object.keys(data).length === 0 && data.constructor === Object) {\n        console.log('No data to display');\n        return true;\n    }\n    return false;\n}\n\n/**\n * Elements factory\n * \n * @param {string} type indicate element type\n * @param {string} content set textContent for element\n * @returns {object} html node\n */\nfunction createNode(type, content) {\n    let node = document.createElement(type);\n    (type === \"table\") ? node.className = \"b_table\": node.className = `b_table__${type}`;\n    if (content || content === 0) node.textContent = content;\n    return node;\n}\n\n/**\n * Creaet rows from data\n * \n * @param {object} data object containing data on current projects\n * @returns {array} with html nodes\n */\nfunction createRows(data) {\n    let rows = [];\n    for (let row in data) {\n        let tr = createNode('tr');\n        rows.push(createCell(tr, data[row]));\n    }\n    return rows;\n}\n\nfunction createCell(tr, data) {\n    //destructuring object with project data & assigning default values\n    let {\n        assignees = [null],\n            blocked = 0,\n            closed = 0,\n            devComplete = 0,\n            devTest = 0,\n            inProgress = 0,\n            name = \"Classified\",\n            opened = 0,\n            project = \"Top Secret\",\n            readyForTest = 0,\n            tridion = 0\n    } = data;\n\n    //building an array for cells in a proper order\n    let cells = [name, project, opened, inProgress, devComplete, tridion, readyForTest, blocked, closed, assignees]\n\n    for (let cell of cells) {\n        let td = createNode('td', cell);\n        tr.appendChild(td);\n    }\n    return tr;\n}\n\n/**\n * Build a table\n * \n * @param {object} container table's container\n * @param {object} table html node object\n * @param {array} headers array with headers' values\n * @param {array} rows array with html nodes to be used as rows\n * @returns {void} \n */\nfunction createTable(container, table, headers, rows) {\n       \n    //create headers\n    let tr = createNode('tr');\n    for (let cell of headers) {\n        let td = createNode('td', cell);\n        tr.appendChild(td);\n    }\n    table.appendChild(tr);\n\n    // table.appendChild(headers);\n    for (let row of rows) {\n        table.appendChild(row);\n    }\n\n    //append table to its container\n    container.appendChild(table);\n}","export default function(jira, data) {\n    \n    //check if data contains message\n    if (data.message) {\n        console.log(data.message);\n        return;\n    }\n\n    //update jira.data object\n    for (let item in data) {\n        jira.data[item] = data[item];\n    }\n    console.log(jira.data);\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}